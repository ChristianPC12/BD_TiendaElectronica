package vista;

import Modelo.Clientes.Cliente;
import Modelo.Producto.Productos;
import Modelo.Ventas.Ventas;
import Modelo.Vista.Vista;
import com.itextpdf.kernel.colors.ColorConstants;
import com.itextpdf.kernel.pdf.PdfDocument;
import com.itextpdf.kernel.pdf.PdfWriter;
import com.itextpdf.layout.Document;
import com.itextpdf.layout.element.Cell;
import com.itextpdf.layout.element.Paragraph;
import com.itextpdf.layout.element.Table;
import com.itextpdf.layout.property.TextAlignment;
import controlador.ClienteControlador;
import controlador.ProductosControlador;
import controlador.VentasControlador;
import java.io.IOException;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class VentasView extends javax.swing.JDialog implements Vista<Ventas> {

    private ProductosControlador productosControlador;
    private VentasControlador controlador;
    private List<Ventas> listaVentas = new ArrayList<>();
    private DefaultTableModel model;

    public VentasView(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);
        controlador = new VentasControlador(this);
        productosControlador = new ProductosControlador(new ProductosView(null, true));
        controlador.readAll();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlGenerar = new javax.swing.JPanel();
        btnGenerar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        btnbucarProducto = new javax.swing.JButton();
        txtCodigo = new javax.swing.JTextField();
        txtNombre = new javax.swing.JTextField();
        txtPrecio = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtCantVendida = new javax.swing.JTextField();
        bntBuscarCliente = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        txtNombreCliente = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        btnPDFTodo = new javax.swing.JButton();
        btnEliminarInforme = new javax.swing.JButton();
        txtCedCliente = new javax.swing.JTextField();
        pnlRegistrosPlanilla = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPlanilla = new javax.swing.JTable();
        lblCant = new javax.swing.JLabel();
        txtCant = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Gestión de Ventas ");
        setPreferredSize(new java.awt.Dimension(925, 538));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        pnlGenerar.setBackground(new java.awt.Color(0, 51, 102));
        pnlGenerar.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED), "Registro de Ventas", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 18), new java.awt.Color(255, 255, 255))); // NOI18N

        btnGenerar.setBackground(new java.awt.Color(255, 127, 0));
        btnGenerar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnGenerar.setText("Generar");
        btnGenerar.setBorder(null);
        btnGenerar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerarActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Buscar Producto:");

        btnbucarProducto.setBackground(new java.awt.Color(255, 127, 0));
        btnbucarProducto.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnbucarProducto.setText("Buscar");
        btnbucarProducto.setBorder(null);
        btnbucarProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnbucarProductoActionPerformed(evt);
            }
        });

        txtCodigo.setEditable(false);
        txtCodigo.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        txtNombre.setEditable(false);
        txtNombre.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombreActionPerformed(evt);
            }
        });

        txtPrecio.setEditable(false);
        txtPrecio.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Código");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Nombre");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Precio");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Cantidad Vendida:");

        txtCantVendida.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        bntBuscarCliente.setBackground(new java.awt.Color(255, 127, 0));
        bntBuscarCliente.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        bntBuscarCliente.setText("Buscar");
        bntBuscarCliente.setBorder(null);
        bntBuscarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntBuscarClienteActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Buscar Cliente:");

        txtNombreCliente.setEditable(false);
        txtNombreCliente.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Cédula:");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Nombre:");

        btnPDFTodo.setBackground(new java.awt.Color(255, 127, 0));
        btnPDFTodo.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnPDFTodo.setText("Generar PDF de todo el informe");
        btnPDFTodo.setBorder(null);
        btnPDFTodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPDFTodoActionPerformed(evt);
            }
        });

        btnEliminarInforme.setBackground(new java.awt.Color(255, 127, 0));
        btnEliminarInforme.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnEliminarInforme.setText("Eliminar");
        btnEliminarInforme.setBorder(null);
        btnEliminarInforme.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarInformeActionPerformed(evt);
            }
        });

        txtCedCliente.setEditable(false);
        txtCedCliente.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        javax.swing.GroupLayout pnlGenerarLayout = new javax.swing.GroupLayout(pnlGenerar);
        pnlGenerar.setLayout(pnlGenerarLayout);
        pnlGenerarLayout.setHorizontalGroup(
            pnlGenerarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlGenerarLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlGenerarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel6)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlGenerarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlGenerarLayout.createSequentialGroup()
                        .addGroup(pnlGenerarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnGenerar, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(160, 160, 160))
                    .addGroup(pnlGenerarLayout.createSequentialGroup()
                        .addGroup(pnlGenerarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtCantVendida)
                            .addComponent(txtCodigo, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlGenerarLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(txtCedCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(29, 29, 29)
                        .addGroup(pnlGenerarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(pnlGenerarLayout.createSequentialGroup()
                                .addComponent(btnPDFTodo, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(164, 164, 164)
                                .addComponent(btnEliminarInforme, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlGenerarLayout.createSequentialGroup()
                                .addComponent(txtNombreCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 379, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(bntBuscarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlGenerarLayout.createSequentialGroup()
                                .addGroup(pnlGenerarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3))
                                .addGap(15, 15, 15)
                                .addGroup(pnlGenerarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(pnlGenerarLayout.createSequentialGroup()
                                        .addGap(35, 35, 35)
                                        .addComponent(jLabel4))
                                    .addGroup(pnlGenerarLayout.createSequentialGroup()
                                        .addComponent(txtPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(35, 35, 35)
                                        .addComponent(btnbucarProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(14, 14, 14))))
        );
        pnlGenerarLayout.setVerticalGroup(
            pnlGenerarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlGenerarLayout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addGroup(pnlGenerarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlGenerarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtCedCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNombreCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bntBuscarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(pnlGenerarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlGenerarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnbucarProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(pnlGenerarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlGenerarLayout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(pnlGenerarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnGenerar, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnEliminarInforme, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnPDFTodo, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlGenerarLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(pnlGenerarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtCantVendida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(1, 1, 1)))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        pnlRegistrosPlanilla.setBackground(new java.awt.Color(0, 51, 102));
        pnlRegistrosPlanilla.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED), "Ventas Registradas", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 14), new java.awt.Color(255, 255, 255))); // NOI18N

        tblPlanilla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tblPlanilla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tblPlanillaMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(tblPlanilla);

        javax.swing.GroupLayout pnlRegistrosPlanillaLayout = new javax.swing.GroupLayout(pnlRegistrosPlanilla);
        pnlRegistrosPlanilla.setLayout(pnlRegistrosPlanillaLayout);
        pnlRegistrosPlanillaLayout.setHorizontalGroup(
            pnlRegistrosPlanillaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 897, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        pnlRegistrosPlanillaLayout.setVerticalGroup(
            pnlRegistrosPlanillaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        lblCant.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblCant.setText("Cantidad de Registros:");

        txtCant.setEditable(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblCant)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtCant, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(pnlRegistrosPlanilla, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(pnlGenerar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnlGenerar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlRegistrosPlanilla, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCant)
                    .addComponent(txtCant, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(54, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    @Override
    public void show(Ventas venta) {
        JOptionPane.showMessageDialog(this, "Venta registrada: " + venta.getIdPlanilla());
    }

    @Override
    public void showAll(List<Ventas> ventas) {
        listaVentas = ventas;
        String[] titulos = {"Id Planilla", "Fecha Creación", "Cedula Cliente", "Cliente", "Código Producto", "Producto",
            "Precio Unidad", "Cantidad Vendida", "Subtotal", "Impuestos", "Total"};
        model = new DefaultTableModel(null, titulos);

        for (Ventas v : ventas) {
            Object[] fila = {
                v.getIdPlanilla(),
                v.getFechaRecibo(),
                v.getCedulaEmpleado(),
                v.getNomEmpleado(),
                v.getCodigoProducto(),
                v.getNombreProducto(),
                v.getPrecioProducto(),
                v.getCantVendidos(),
                calcularSubTotal(v),
                calcularImpuestos(v),
                calcularTotal(v)
            };
            model.addRow(fila);
        }

        tblPlanilla.setModel(model);
        txtCant.setText(String.valueOf(model.getRowCount()));
    }

    @Override
    public void showMessage(String msg) {
        JOptionPane.showMessageDialog(this, msg);
    }

    @Override
    public void showError(String err) {
        JOptionPane.showMessageDialog(this, err, "Error", JOptionPane.ERROR_MESSAGE);
    }

    @Override
    public void showWarnig(String warning) {
        JOptionPane.showMessageDialog(this, warning, "Advertencia", JOptionPane.WARNING_MESSAGE);
    }

    @Override
    public boolean validateRequired() {
        return !txtCedCliente.getText().trim().isEmpty()
                && !txtNombreCliente.getText().trim().isEmpty()
                && !txtCodigo.getText().trim().isEmpty()
                && !txtNombre.getText().trim().isEmpty()
                && !txtPrecio.getText().trim().isEmpty()
                && !txtCantVendida.getText().trim().isEmpty();
    }

    private int calcularSubTotal(Ventas v) {
        return v.getPrecioProducto() * v.getCantVendidos();
    }

    private int calcularImpuestos(Ventas v) {
        return (int) (0.13 * calcularSubTotal(v));
    }

    private int calcularTotal(Ventas v) {
        return calcularSubTotal(v) + calcularImpuestos(v);
    }


    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
//        if (!listaPlanilla.isEmpty()) {
//            btnPDFTodo.setVisible(true);
//            btnPDFEspecifico.setVisible(true);
//        }
//        PDFVision();
//        mostrarTabla();

    }//GEN-LAST:event_formWindowActivated

    private void btnGenerarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerarActionPerformed
        if (!validateRequired()) {
            showError("Todos los campos son obligatorios.");
            return;
        }

        try {
            int codigo = Integer.parseInt(txtCodigo.getText());
            int cantidad = Integer.parseInt(txtCantVendida.getText());
            String nombreProducto = txtNombre.getText();

            Ventas venta = new Ventas();
            venta.setFechaRecibo(LocalDate.now());
            venta.setCedulaEmpleado(Integer.parseInt(txtCedCliente.getText()));
            venta.setNomEmpleado(txtNombreCliente.getText());
            venta.setCodigoProducto(codigo);
            venta.setNombreProducto(nombreProducto);
            venta.setPrecioProducto((int) Double.parseDouble(txtPrecio.getText()));
            venta.setCantVendidos(cantidad);
            venta.setSubTotal(calcularSubTotal(venta));
            venta.setImpuestos(calcularImpuestos(venta));
            venta.setTotal(calcularTotal(venta));

            Productos producto = productosControlador.readAll().stream()
                    .filter(p -> p.getCodigo() == codigo)
                    .findFirst().orElse(null);

            // Validar existencia
            if (producto == null) {
                showError("Producto no encontrado.");
                return;
            }

            if (cantidad > producto.getCantDisponible()) {
                showError("No hay suficiente stock disponible para este producto.");
                return;
            }
            controlador.create(venta);
            productosControlador.descontarStock(codigo, cantidad, this);

        } catch (NumberFormatException e) {
            showError("Revisa que los campos numéricos sean válidos.");
        }
        btnPDFTodo.setVisible(true);

    }//GEN-LAST:event_btnGenerarActionPerformed


    private void btnbucarProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnbucarProductoActionPerformed
        ProductosBuscaView view = new ProductosBuscaView(null, true);
        view.setVisible(true);
        Productos producto = view.getProductoSeleccionado();
        if (producto != null) {
            txtCodigo.setText(String.valueOf(producto.getCodigo()));
            txtNombre.setText(producto.getNombre());
            txtPrecio.setText(String.valueOf(producto.getPrecio()));
        }
    }//GEN-LAST:event_btnbucarProductoActionPerformed

    private void txtNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombreActionPerformed

    private void btnEliminarInformeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarInformeActionPerformed
        if (listaVentas.isEmpty()) {
            showMessage("No hay registros para eliminar");
            return;
        }

        int filaSeleccionada = tblPlanilla.getSelectedRow();
        if (filaSeleccionada == -1) {
            showWarnig("Debe seleccionar un registro para eliminar");
            return;
        }

        int confirm = JOptionPane.showConfirmDialog(this, "¿Está seguro de eliminar el registro seleccionado?", "Confirmar Eliminación", JOptionPane.YES_NO_OPTION);
        if (confirm == JOptionPane.YES_OPTION) {
            Ventas ventaSeleccionada = listaVentas.get(filaSeleccionada);
            controlador.delete(ventaSeleccionada);
        }
    }//GEN-LAST:event_btnEliminarInformeActionPerformed

    private void btnPDFTodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPDFTodoActionPerformed
        DefaultTableModel model = (DefaultTableModel) tblPlanilla.getModel();

        if (model.getRowCount() == 0) {
            JOptionPane.showMessageDialog(this, "No hay datos para exportar al PDF.");
            return;
        }

        String rutaEscritorio = System.getProperty("user.home") + "/Desktop/";
        String nombreArchivo = "Informe_VentasCompleto_" + LocalDate.now() + ".pdf";
        String rutaCompleta = rutaEscritorio + nombreArchivo.replaceAll("[^a-zA-Z0-9._-]", "_");

        try {
            PdfWriter writer = new PdfWriter(rutaCompleta);
            PdfDocument pdf = new PdfDocument(writer);
            Document document = new Document(pdf);

            document.add(new Paragraph("Informe de Ventas")
                    .setBold()
                    .setFontSize(16)
                    .setMarginBottom(10));
            document.add(new Paragraph("Todas las ventas registradas")
                    .setFontSize(12)
                    .setMarginBottom(20));

            int columnCount = model.getColumnCount();
            float[] columnWidths = new float[columnCount];
            for (int i = 0; i < columnCount; i++) {
                columnWidths[i] = 100f;
            }
            Table pdfTable = new Table(columnWidths);
            for (int i = 0; i < columnCount; i++) {
                pdfTable.addHeaderCell(new Cell().add(new Paragraph(model.getColumnName(i)))
                        .setBold()
                        .setTextAlignment(TextAlignment.CENTER)
                        .setBackgroundColor(ColorConstants.LIGHT_GRAY));
            }

            for (int i = 0; i < model.getRowCount(); i++) {
                for (int j = 0; j < columnCount; j++) {
                    pdfTable.addCell(new Cell().add(new Paragraph(model.getValueAt(i, j).toString())));
                }
            }

            document.add(pdfTable);
            document.close();

            JOptionPane.showMessageDialog(this, "PDF generado exitosamente en: " + rutaCompleta);

        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, "Error al generar el PDF: " + e.getMessage());
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnPDFTodoActionPerformed

    private void bntBuscarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntBuscarClienteActionPerformed
        ClienteBuscaView view = new ClienteBuscaView(null, true);
        view.setVisible(true);
        Cliente cliente = view.getClienteSeleccionado();
        if (cliente != null) {
            txtCedCliente.setText(cliente.getCedula());
            txtNombreCliente.setText(cliente.getNombreCompleto());
        }

    }//GEN-LAST:event_bntBuscarClienteActionPerformed

    private void tblPlanillaMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblPlanillaMousePressed
        if (evt.getClickCount() == 1) {
            int row = tblPlanilla.getSelectedRow();
            if (row != -1) {
                txtCedCliente.setText(String.valueOf(tblPlanilla.getValueAt(row, 2))); // Cedula Cliente
                txtNombreCliente.setText(String.valueOf(tblPlanilla.getValueAt(row, 3))); // Nombre Cliente
                txtCodigo.setText(String.valueOf(tblPlanilla.getValueAt(row, 4))); // Código Producto
                txtNombre.setText(String.valueOf(tblPlanilla.getValueAt(row, 5))); // Nombre Producto
                txtPrecio.setText(String.valueOf(tblPlanilla.getValueAt(row, 6))); // Precio Producto
                txtCantVendida.setText(String.valueOf(tblPlanilla.getValueAt(row, 7))); // Cantidad Vendida
            }
        }
    }//GEN-LAST:event_tblPlanillaMousePressed

    public void EvaluarCantidadEdit(int nuevaCantidad, String nombreProducto) {
        if (nuevaCantidad >= 1 && nuevaCantidad < 15) {
            showWarnig("El producto " + nombreProducto + " está cerca de agotarse. \nEvalúa un reabastecimiento pronto.");
        } else if (nuevaCantidad == 0) {
            showWarnig("El producto " + nombreProducto + " ha sido agotado. \nEs necesario realizar un reabastecimiento inmediato.");
        }
    }

    public void PDFVision() {
        btnPDFTodo.setVisible(false);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentasView.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentasView.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentasView.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentasView.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                VentasView dialog = new VentasView(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bntBuscarCliente;
    private javax.swing.JButton btnEliminarInforme;
    private javax.swing.JButton btnGenerar;
    private javax.swing.JButton btnPDFTodo;
    private javax.swing.JButton btnbucarProducto;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblCant;
    private javax.swing.JPanel pnlGenerar;
    private javax.swing.JPanel pnlRegistrosPlanilla;
    private javax.swing.JTable tblPlanilla;
    private javax.swing.JTextField txtCant;
    private javax.swing.JTextField txtCantVendida;
    private javax.swing.JTextField txtCedCliente;
    private javax.swing.JTextField txtCodigo;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtNombreCliente;
    private javax.swing.JTextField txtPrecio;
    // End of variables declaration//GEN-END:variables
}
